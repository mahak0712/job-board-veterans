/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.VeteranOrg.VeteranRole;

import Business.EcoSystem;
import Business.Enterprise.ConsultancyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.ConsultancyOrganization.ConsultantOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ConsultancyServiceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.security.auth.login.AccountException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author bhargavisabbisetty
 */
public class View_Consultancy_Reg_Form extends javax.swing.JPanel {
    JPanel userProcessContainer;
    ConsultancyEnterprise enterprise;
    UserAccount userAccount;
    EcoSystem business;
    ConsultancyServiceWorkRequest temp = new ConsultancyServiceWorkRequest();
    /**
     * Creates new form View_Consultancy_Reg_Form
     */
    public View_Consultancy_Reg_Form(JPanel userProcessContainer, ConsultancyEnterprise enterprise, UserAccount userAccount,EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.business = business;
        display();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Job_Name_TB = new javax.swing.JTextField();
        Back_Btn = new javax.swing.JButton();
        Job_Type_CB = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Update_Btn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Save_Btn = new javax.swing.JButton();
        Send_Btn = new javax.swing.JButton();
        min_Sal_CB = new javax.swing.JComboBox();
        max_Sal_CB = new javax.swing.JComboBox();
        Location_CB = new javax.swing.JComboBox();

        Back_Btn.setText("Back");
        Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_BtnActionPerformed(evt);
            }
        });

        Job_Type_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "On-Site", "Remote Only" }));

        jLabel3.setText("Salary Range:");

        jLabel4.setText("Job Name:");

        jLabel2.setText("Location:");

        Update_Btn.setText("Update");
        Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_BtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Job Type:");

        jLabel6.setText("to");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel1.setText("Registration Form");

        Save_Btn.setText("Save");
        Save_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_BtnActionPerformed(evt);
            }
        });

        Send_Btn.setText("Request");
        Send_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_BtnActionPerformed(evt);
            }
        });

        min_Sal_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5000", "10000", "15000", "20000", "25000", "30000", "35000", "40000" }));

        max_Sal_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10000", "15000", "20000", "25000", "30000", "35000", "40000", "45000" }));

        Location_CB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Atlanta", "Austin", "Boston", "Charlotte", "Chicago", "Dallas", "Denver", "Detroit", "Houston", "Los Angeles", "Memphis", "New York", "Oklahoma  City", "Portland", "Raleigh", "San Antonio", "San Francisco", "San Jose", "Seattle", "Washington, D.C." }));
        Location_CB.setActionCommand("null");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(217, 217, 217))
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(Update_Btn)
                .addGap(18, 18, 18)
                .addComponent(Save_Btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Back_Btn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Send_Btn)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(min_Sal_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(max_Sal_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(Job_Name_TB, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Job_Type_CB, 0, 231, Short.MAX_VALUE))
                    .addComponent(Location_CB, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Location_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(min_Sal_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(max_Sal_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Job_Name_TB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(Job_Type_CB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Update_Btn)
                    .addComponent(Back_Btn)
                    .addComponent(Save_Btn)
                    .addComponent(Send_Btn))
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_BtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        Registered_Consultancy_job_JPanel registered_consultancy_jpanel = (Registered_Consultancy_job_JPanel) component;
        registered_consultancy_jpanel.populateNetwork();
        //        System.out.println(request.getStatus());
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_Back_BtnActionPerformed

    private void Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_BtnActionPerformed
        // TODO add your handling code here:
   
                Location_CB.setEnabled(true);
                min_Sal_CB.setEnabled(true);
                max_Sal_CB.setEnabled(true);
                Job_Name_TB.setEditable(true);
                Job_Type_CB.setEnabled(true);
//        System.out.println("hi");
       
    }//GEN-LAST:event_Update_BtnActionPerformed

    private void Save_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_BtnActionPerformed
        // TODO add your handling code here:
        
        boolean Valid=true;
        Integer max = Integer.parseInt(max_Sal_CB.getSelectedItem().toString());
        Integer min = Integer.parseInt(min_Sal_CB.getSelectedItem().toString());
        if(min>=max){
            JOptionPane.showMessageDialog(null, "Minimum Salary cannot be greater than equal to Maximum Salary");
            Valid = false;
        }
        
        if(Valid){
        
        ConsultancyServiceWorkRequest  c1;
        for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ConsultantOrganization){
                for(WorkRequest work:organization.getWorkQueue().getWorkRequestList()){
                    if(work instanceof ConsultancyServiceWorkRequest){
                        ConsultancyServiceWorkRequest request_now = (ConsultancyServiceWorkRequest)work;
                        request_now.getJobName();
                        System.out.println(userAccount.getWorkQueue().getWorkRequestList());
                        for(WorkRequest req1: userAccount.getWorkQueue().getWorkRequestList() ){
                            if( req1 instanceof ConsultancyServiceWorkRequest){
                                c1=(ConsultancyServiceWorkRequest) req1;                            }
                        }
                         request_now.setLocation(Location_CB.getSelectedItem().toString());
                        System.out.println(request_now.getStatus().toString());
                        request_now.setJobName(Job_Name_TB.getText());
                        request_now.setJobType(Job_Type_CB.getSelectedItem().toString());
                        request_now.setMax_Salary(Integer.parseInt(max_Sal_CB.getSelectedItem().toString()));
                        request_now.setMin_Salary(Integer.parseInt(min_Sal_CB.getSelectedItem().toString()));
                        request_now.setSender(userAccount);
                        request_now.setUser(userAccount);
                        temp = request_now;
                        c1 =temp;
                        Location_CB.setEnabled(false);
                        Job_Name_TB.setEditable(false);
                        Job_Type_CB.setEnabled(false);
                        min_Sal_CB.setEnabled(false);
                        max_Sal_CB.setEnabled(false);
                        JOptionPane.showMessageDialog(null,"Data is saved successfully");
                       
                    }
                }
            }
        }
        }
    }//GEN-LAST:event_Save_BtnActionPerformed

    private void Send_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_BtnActionPerformed
        // TODO add your handling code here:
        int index,index1;
               for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization instanceof ConsultantOrganization){
                for(WorkRequest work:organization.getWorkQueue().getWorkRequestList()){
                    ArrayList workarray = new ArrayList();
                    workarray=organization.getWorkQueue().getWorkRequestList();
                    System.out.println("1               "+organization.getWorkQueue().getWorkRequestList().size());
                    if(work instanceof ConsultancyServiceWorkRequest){
                        ConsultancyServiceWorkRequest request_now = (ConsultancyServiceWorkRequest)work;
                        if(request_now.getStatus().equals("Suggested")){
                        index=workarray.indexOf(request_now);
                        organization.getWorkQueue().getWorkRequestList().remove(index);
                        temp.setStatus("Updated Request");
                        temp.setSender(userAccount);
                        temp.setUser(userAccount);
                        organization.getWorkQueue().getWorkRequestList().add(temp);
                        }
                        JOptionPane.showMessageDialog(null, "successfully updated request sent");
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
//                       if(request_now.getStatus().equals("Updated Request")){
//                        organization.getWorkQueue().getWorkRequestList().remove(request_now);
//                        userAccount.getWorkQueue().getWorkRequestList().remove(request_now);
//                       }
//                       
//                       else if(request_now.getStatus().equals("Suggested")){
//                        request_now.setSender(userAccount);
//                        request_now.setStatus("Updated Request");
//                        index=organization.getWorkQueue().getWorkRequestList().indexOf(request_now);
//                        ConsultancyServiceWorkRequest req=(ConsultancyServiceWorkRequest)organization.getWorkQueue().getWorkRequestList().get(index);
//                        req.setSender(userAccount);
//                        req.setStatus("Updated Request");
//                        
//                        index1=userAccount.getWorkQueue().getWorkRequestList().indexOf(request_now);
//                        ConsultancyServiceWorkRequest req1=(ConsultancyServiceWorkRequest)userAccount.getWorkQueue().getWorkRequestList().get(index1);
//                        req1.setSender(userAccount);
//                        req1.setStatus("Updated Request");
////                        organization.getWorkQueue().getWorkRequestList().set(index,req);
//                        
//                        JOptionPane.showMessageDialog(null,"successfully inserted");
//                       }
//                       if(flag==1){
//                       organization.getWorkQueue().getWorkRequestList().set(index,req);
//                       userAccount.getWorkQueue().getWorkRequestList().set(index1,req1);
//                    }
//                       if(flag==0){
//                           
                       }
                }
            }
               }
                    
    }//GEN-LAST:event_Send_BtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_Btn;
    private javax.swing.JTextField Job_Name_TB;
    private javax.swing.JComboBox Job_Type_CB;
    private javax.swing.JComboBox Location_CB;
    private javax.swing.JButton Save_Btn;
    private javax.swing.JButton Send_Btn;
    private javax.swing.JButton Update_Btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox max_Sal_CB;
    private javax.swing.JComboBox min_Sal_CB;
    // End of variables declaration//GEN-END:variables

    private void display() {
    System.out.println("hi");
    System.out.println(enterprise.getWorkQueue().getWorkRequestList());
    for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList()){
        if(org instanceof ConsultantOrganization){
            for(WorkRequest work:org.getWorkQueue().getWorkRequestList())
            {
        System.out.println(work);
        if(work instanceof ConsultancyServiceWorkRequest){
            System.out.println(work);
                ConsultancyServiceWorkRequest req =     (ConsultancyServiceWorkRequest)work;
                System.out.println(req);
                Location_CB.setSelectedItem(req.getLocation().toString());
                Location_CB.setEnabled(false);
                min_Sal_CB.setSelectedItem(req.getMin_Salary().toString());
                min_Sal_CB.setEnabled(false);
                max_Sal_CB.setSelectedItem(req.getMax_Salary().toString());
                max_Sal_CB.setEnabled(false);
                Job_Name_TB.setText(req.getJobName());
                Job_Name_TB.setEditable(false);
                Job_Type_CB.setSelectedItem(req.getJobType());
                Job_Type_CB.setEnabled(false);
        }
    }
    }
    }
    }
}
