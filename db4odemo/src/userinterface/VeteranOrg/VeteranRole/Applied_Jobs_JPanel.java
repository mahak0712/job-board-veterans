/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.VeteranOrg.VeteranRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.JobProviderEnterprise;
import Business.JobDetails.JobDetails;
import Business.Network.Network;
import Business.Organization.JobProviderOrganization.ApplicationProcessOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ApplicationProcessWorkRequest;
import Business.WorkQueue.JobPostingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhargavisabbisetty
 */
public class Applied_Jobs_JPanel extends javax.swing.JPanel {
private OrganizationDirectory directory;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem business;
    private UserAccount account;
    /**
     * Creates new form Applied_Jobs
     */
    public Applied_Jobs_JPanel(JPanel userProcessContainer,Enterprise enterprise, EcoSystem business, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise=enterprise;
        this.business=business;
        this.account = account;
        populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Applied_Jobs_JTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        View_Btn = new javax.swing.JButton();
        Back_btn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        Applied_Jobs_JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Company Name", "Job Title", "Salary", "Location", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Applied_Jobs_JTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 153, 255));
        jLabel1.setText("List of Jobs Applied");

        View_Btn.setText("View");
        View_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_BtnActionPerformed(evt);
            }
        });

        Back_btn.setText("Back");
        Back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(View_Btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Back_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(View_Btn)
                    .addComponent(Back_btn))
                .addContainerGap(104, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_btnActionPerformed
        // TODO add your handling code here:        // TODO add your handling code here:
        userProcessContainer.remove(this);
//        Component[] componentArray = userProcessContainer.getComponents();
//        Component component = componentArray[componentArray.length - 1];
//        DoctorWorkAreaJPanel dwjp = (DoctorWorkAreaJPanel) component;
//        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_Back_btnActionPerformed

    private void View_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_BtnActionPerformed
        // TODO add your handling code here:
          int selectedRow = Applied_Jobs_JTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "no row is selected");
            return;
        }

        JobDetails request = (JobDetails) Applied_Jobs_JTable.getValueAt(selectedRow, 0);

//        request.setStatus("Processing");
        View_Applied_Job_JPanel postedJobJPanel = new View_Applied_Job_JPanel(userProcessContainer ,request,enterprise,account,business);
        userProcessContainer.add("PostedJobJPanel", postedJobJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_View_BtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Applied_Jobs_JTable;
    private javax.swing.JButton Back_btn;
    private javax.swing.JButton View_Btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    void populate() {
    DefaultTableModel model = (DefaultTableModel) Applied_Jobs_JTable.getModel();
        model.setRowCount(0);
        for(Network network : business.getNetworkList())
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof JobProviderEnterprise) {
                System.out.println(enterprise);
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof ApplicationProcessOrganization) {
                        System.out.println(organization);
                        for (WorkRequest work : account.getWorkQueue().getWorkRequestList()) {
//                            System.out.println("hi"+work);
                            if (work instanceof ApplicationProcessWorkRequest) {
                                System.out.println(work);
                                System.out.println(work.getStatus());
                                ApplicationProcessWorkRequest apwr = (ApplicationProcessWorkRequest) work;
                                JobDetails jd = apwr.getJobDetails();
                                System.out.println(apwr);
                                System.out.println(jd);
//                                JobWorkRequest jr = (JobWorkRequest) work;
//                                JobDetails jd=jr.getJobdetails();
//                                if (work.getStatus().equals("Completed")){
                                Object[] row = new Object[8];
                                row[0] = apwr.getJobDetails();
                                if (work != null) {
                                    row[1] = jd.getJobTitle();
                                    row[2] = jd.getMaxSalary();
                                    row[3] = jd.getLocation();
//                                    row[4] = j;
//                                    row[5] = EventWorkRequest.getEvent().getLocation();
//                                    row[6] = EventWorkRequest.getEvent().getDescription();
//                                    if (jCheckBox1.isSelected()) {
//                                        educationEventsWorkRequest.setClaimedMoney(educationEventsWorkRequest.getEvent().getConveyanceAllowance());
//                                    }
                                }
                                row[4] = apwr.getStatus();

                                model.addRow(row);
                                }
                            }
                        }
                    }

                }
            }

        }
    }   
//    }
//}
