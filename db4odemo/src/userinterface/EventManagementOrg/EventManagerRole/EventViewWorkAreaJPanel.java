/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EventManagementOrg.EventManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EventManagementEnterprise;
import Business.Event.Event;
import Business.Network.Network;
import Business.Organization.EventManagementOrganization.EventManagementOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EventWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author guruisi
 */
public class EventViewWorkAreaJPanel extends javax.swing.JPanel {

    private Event event;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EventManagementOrganization organization;
    private final JPanel userProcessContainer;
    private final EcoSystem business;
    private Network network;
    String picPath;
    /**
     * Creates new form EventView
     */
    public EventViewWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,
            EventManagementOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        this.userAccount = account;
        //this.network = network;
        populateTable();
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)eventTable.getModel();
        model.setRowCount(0);
        System.out.println("hi");
        
//        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
//            Object[] row = new Object[7];
//            row[0] = request;
//            row[1] = request.getSender().getEmployee().getName();
//            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
//            row[3] = request.getStatus();
//            
//            model.addRow(row);
//        }

//       System.out.println(business.getNetworkList());
      for(Network network : business.getNetworkList()){
//    if(network instanceof Network){
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof EventManagementEnterprise) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof EventManagementOrganization) {
                        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                            if (request instanceof EventWorkRequest) {
                                EventWorkRequest eWorkRequest = (EventWorkRequest) request;
                                
                              Object[] row = new Object[8];
                                row[0] = eWorkRequest;
                                if (eWorkRequest.getEvent() != null) {
                                    Event eEvent = eWorkRequest.getEvent();
//                                    row[1] = eEvent.getEventName();
                                    row[1] = eEvent.getEventTheme();
                                    row[2] = eEvent.getEventDate();
                                    row[3] = eEvent.getEventTime();
//                                    System.out.println(eEvent.getEventTime());
                                    row[4] = eEvent.getLocation();
                                    row[5] = eEvent.getSeats();
                                    //row[6] = eWorkRequest.getEvent();
                                    //row[7] = 
                                   
                                }
                                
                                row[6] = eWorkRequest.getStatus();
                                model.addRow(row);
                                }
                             
                            }
                        }
                    }

                }
            }
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        eventTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        viewDetailsBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        eventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Event Name", "Event Theme", "Date", "Time", "Location", "Seats", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(eventTable);
        if (eventTable.getColumnModel().getColumnCount() > 0) {
            eventTable.getColumnModel().getColumn(0).setResizable(false);
            eventTable.getColumnModel().getColumn(1).setResizable(false);
            eventTable.getColumnModel().getColumn(2).setResizable(false);
            eventTable.getColumnModel().getColumn(3).setResizable(false);
            eventTable.getColumnModel().getColumn(4).setResizable(false);
            eventTable.getColumnModel().getColumn(5).setResizable(false);
            eventTable.getColumnModel().getColumn(6).setResizable(false);
        }

        backBtn.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 51, 255));
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        viewDetailsBtn.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        viewDetailsBtn.setForeground(new java.awt.Color(0, 51, 255));
        viewDetailsBtn.setText("View Details");
        viewDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsBtnActionPerformed(evt);
            }
        });

        refreshBtn.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(0, 51, 255));
        refreshBtn.setText("Refresh");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewDetailsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewDetailsBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshBtn)
                .addContainerGap(195, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsBtnActionPerformed
        // TODO add your handling code here:
   int selectedRow = eventTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row!");
        }
        else{
            EventWorkRequest request = (EventWorkRequest) eventTable.getValueAt(selectedRow, 0);
           
            EventViewDetailsWorkAreaJPanel viewDetailsJPanel = new EventViewDetailsWorkAreaJPanel(userProcessContainer,  request.getEvent());
            userProcessContainer.add("ViewDetailsJPanel", viewDetailsJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewDetailsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length -1];
        EventManagerWorkAreaJPanel managerJPanel = (EventManagerWorkAreaJPanel)component;
        
        //managerJPanel.populate();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTable eventTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton viewDetailsBtn;
    // End of variables declaration//GEN-END:variables
}
