/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ConsultancyOrg.ConsultantRole;

import Business.EcoSystem;
import Business.Enterprise.ConsultancyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.ConsultancyOrganization.ConsultantOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ConsultancyServiceWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author guruisi
 */
public class ConsultantViewNewRequestWorkAreaJPanel extends javax.swing.JPanel {
    private final JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount account;

    /**
     * Creates new form ConsultantViewVeteransWorkAreaJPanel
     */
    public ConsultantViewNewRequestWorkAreaJPanel(JPanel userProcessContainer, EcoSystem business,UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.account = account;
        populateTable();
    }

        private void populateTable(){
            DefaultTableModel model = (DefaultTableModel)Vet_Req_View_Table.getModel();
            model.setRowCount(0);
      for(Network network : business.getNetworkList()){
    if(network instanceof Network){
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof ConsultancyEnterprise) {
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof ConsultantOrganization) {
                        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                            if (request instanceof ConsultancyServiceWorkRequest) {
                                ConsultancyServiceWorkRequest csWorkRequest = (ConsultancyServiceWorkRequest) request;
                                UserAccount temp = csWorkRequest.getSender();
                                Object[] row = new Object[8];
                                row[0] = csWorkRequest;
                                if (csWorkRequest != null) {
                                    
//                                    row[1] = eEvent.getEventName();
                                    row[1] = csWorkRequest.getJobName();
                                    row[2] = csWorkRequest.getJobType();
                                    row[3] = csWorkRequest.getLocation();
//                                    System.out.println(eEvent.getEventTime());
                                    row[4] = csWorkRequest.getMin_Salary();
                                    row[5] = csWorkRequest.getMax_Salary();
                                    //row[6] = eWorkRequest.getEvent();
                                    //row[7] = 
                                    row[6] = csWorkRequest.getUser();
                                   
                                }
                                
                                row[7] = csWorkRequest.getStatus();
                                model.addRow(row);
                                }
                             
                            }
                        }
                    }

                }
            }
    }
      }
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Vet_Req_View_Table = new javax.swing.JTable();
        backBTN = new javax.swing.JButton();
        searchJobBTN = new javax.swing.JButton();

        Vet_Req_View_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Veterans", "Job Name", "Job Type", "Job Location", "Salary(min)", "Salary(max)", "Sender", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Vet_Req_View_Table);
        if (Vet_Req_View_Table.getColumnModel().getColumnCount() > 0) {
            Vet_Req_View_Table.getColumnModel().getColumn(0).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(1).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(2).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(3).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(4).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(5).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(6).setResizable(false);
            Vet_Req_View_Table.getColumnModel().getColumn(7).setResizable(false);
        }

        backBTN.setText("<< Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        searchJobBTN.setText("Search Jobs");
        searchJobBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJobBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBTN)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchJobBTN)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBTN)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchJobBTN)
                .addContainerGap(195, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBTNActionPerformed

    private void searchJobBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJobBTNActionPerformed
        // TODO add your handling code here:
           int selectedRow = Vet_Req_View_Table.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row!");
        }
        else{
            ConsultancyServiceWorkRequest request = (ConsultancyServiceWorkRequest) Vet_Req_View_Table.getValueAt(selectedRow, 0);
           UserAccount sender = (UserAccount)Vet_Req_View_Table.getValueAt(selectedRow, 6);
        ConsultantSearchJobWorkAreaJPanel searchJobJPanel = new ConsultantSearchJobWorkAreaJPanel(userProcessContainer, business,request,sender,account);
        userProcessContainer.add("", searchJobJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_searchJobBTNActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Vet_Req_View_Table;
    private javax.swing.JButton backBTN;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchJobBTN;
    // End of variables declaration//GEN-END:variables
}
