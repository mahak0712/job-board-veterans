/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.JobProviderOrg.ApplicationProcessRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.JobProviderEnterprise;
import Business.Network.Network;
import Business.Organization.JobProviderOrganization.ApplicationProcessOrganization;
import Business.Organization.JobProviderOrganization.InterviewSchedulerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ApplicationProcessWorkRequest;
import Business.WorkQueue.InterviewSchedulerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mahaksingh
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    ApplicationProcessWorkRequest applicationProcessRequest;
    private EcoSystem business;
    private UserAccount userAccount;
    private ApplicationProcessOrganization organization;
    private Enterprise enterprise;

    /**
     * Creates new form ApplicationPart2JPanel
     */
    public ProcessWorkRequestJPanel(JPanel userProcessContainer, UserAccount account, ApplicationProcessWorkRequest applicationProcessRequest, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise = enterprise;
        this.applicationProcessRequest = applicationProcessRequest;
        populateRequestTable();
        
    }
public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request.getStatus()!="Completed")
                 {
                    InterviewSchedulerWorkRequest interviewWorkRequest = (InterviewSchedulerWorkRequest) request;
                    Object[] row = new Object[4];
                    row[0] = applicationProcessRequest.getCandidateprofile().getFirstName();
                    row[0] = interviewWorkRequest.getCandidateReview();
                    row[1] = interviewWorkRequest.getMainSkill();
                    row[2] = interviewWorkRequest.getStatus();
//                    row[3] = applicationProcessRequest.getJobDetails();
                    interviewWorkRequest.setJobDetails(applicationProcessRequest.getJobDetails());
                    interviewWorkRequest.setCandidateProfile(applicationProcessRequest.getCandidateprofile());
                    interviewWorkRequest.setApp(applicationProcessRequest);
                    model.addRow(row);
                }
            }
       
}
    /**for (WorkRequest workreq : organization.getWorkQueue().getWorkRequestList()) {
                            if (workreq instanceof JobPostingWorkRequest) {
                                JobPostingWorkRequest jpWorkreq = (JobPostingWorkRequest) workreq;
//                                if (JobPostingWorkRequest.getStatus()!="Completed"){
                                Object[] row = new Object[6];
                                row[0] = jpWorkreq;
                                if (jpWorkreq != null) {
                                    
                                    JobDetails jobdetails=jpWorkreq.getJobdetails();
                                    System.out.println(jobdetails);
                                    row[1] = jobdetails.getLocation();
                                    row[2] = jpWorkreq.getRequestDate();
                                    row[3] = jpWorkreq.getStatus();
                                    row[4] = jobdetails.getJobDescription();
                                
                                                          
                                }
                                row[5] = jpWorkreq.getStatus();

                                model.addRow(row);
                            }
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        requestBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        candidateReviewTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mainSkillsText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        resultTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        commentsTxt = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        submitJButton.setBackground(new java.awt.Color(0, 102, 102));
        submitJButton.setFont(new java.awt.Font("Chalkboard SE", 0, 12)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("SUBMIT RESULT");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 51, 255));
        backJButton.setFont(new java.awt.Font("Superclarendon", 0, 12)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< BACK");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Superclarendon", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("APPLICANT'S PROFILE RESULT");

        requestBtn.setBackground(new java.awt.Color(0, 51, 255));
        requestBtn.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        requestBtn.setForeground(new java.awt.Color(255, 255, 255));
        requestBtn.setText("REQUEST INTERVIEWING TEAM");
        requestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Superclarendon", 0, 12)); // NOI18N
        jLabel7.setText("Candidate Review :");

        candidateReviewTxt.setFont(new java.awt.Font("Chalkboard SE", 0, 12)); // NOI18N
        candidateReviewTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candidateReviewTxtActionPerformed(evt);
            }
        });

        requestTable.setFont(new java.awt.Font("Chalkboard SE", 0, 12)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Candidate's Review", "Main Skills", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestTable);

        jLabel3.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setText("INTERVIEW SCHEDULING REQUEST");

        jLabel5.setFont(new java.awt.Font("Superclarendon", 0, 12)); // NOI18N
        jLabel5.setText("Main Skills:");

        jLabel8.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        jLabel8.setText("Result");

        jLabel9.setFont(new java.awt.Font("Superclarendon", 0, 13)); // NOI18N
        jLabel9.setText("Comments");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(41, 41, 41)
                        .addComponent(commentsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(71, 71, 71)
                        .addComponent(resultTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mainSkillsText, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(41, 41, 41)
                                    .addComponent(candidateReviewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(backJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(requestBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(251, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commentsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(36, 36, 36)
                .addComponent(submitJButton)
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(candidateReviewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(mainSkillsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backJButton)
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        
        if ((!resultTxt.getText().equals(""))
            
            && (!commentsTxt.getText().equals(""))) {
            boolean isError = false;
            try {

                applicationProcessRequest.setResults(resultTxt.getText());
                
                //applicationProcessRequest.setInterviewDate(interviewDateText.getText());
                applicationProcessRequest.setComments(commentsTxt.getText());

                applicationProcessRequest.setStatus("Send to Interviewing team"); //before
                JOptionPane.showMessageDialog(null, "Your information has been successfully send to the interview scheduling team !", "Information", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception e3) {
                isError = true;
                JOptionPane.showMessageDialog(null, "Please input the details in proper format", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Fill all the fields before submitting ", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ApplicationProcessWorkAreaJPanel apwjp = (ApplicationProcessWorkAreaJPanel) component;
        apwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void requestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestBtnActionPerformed
        // TODO add your handling code here:
        
        String candidateReview = candidateReviewTxt.getText();
       String mainSkills = mainSkillsText.getText();
        
        InterviewSchedulerWorkRequest interviewWorkRequest = new InterviewSchedulerWorkRequest();
        
interviewWorkRequest.setCandidateReview(candidateReview);
interviewWorkRequest.setMainSkill(mainSkills);


interviewWorkRequest.setSender(userAccount);
interviewWorkRequest.setStatus("Sent to Interview Scheduler");
interviewWorkRequest.setReceiver(userAccount);



        Organization org = null;
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof JobProviderEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof InterviewSchedulerOrganization) {
                            org = organization;
                            //                            System.out.println("orgname" + organization.getName());
                            org.getWorkQueue().getWorkRequestList().add(interviewWorkRequest);
                            break;
                        }
                    }
                }

            }
        }

        if (org != null) {

            userAccount.getWorkQueue().getWorkRequestList().add(interviewWorkRequest);
            JOptionPane.showMessageDialog(null, "Sent to interview scheduling team successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
            populateRequestTable();

        }
    }//GEN-LAST:event_requestBtnActionPerformed

    private void candidateReviewTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candidateReviewTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_candidateReviewTxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField candidateReviewTxt;
    private javax.swing.JTextField commentsTxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mainSkillsText;
    private javax.swing.JButton requestBtn;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField resultTxt;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
